name: Fetch All Open Pull Request SHAs
on:
  push:
  workflow_dispatch:
jobs:
  fetch_all_pull_request_shas:
    runs-on: ubuntu-latest
    outputs:
      sha_count: ${{ steps.set_sha_count.outputs.sha_count }}
    steps:
    - name: Fetch all opened pull request numbers and merge commit SHAs
      id: fetch_all_pull_requests
      run: |
        pr_info=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        "https://api.github.com/repos/redhat-developer/lsp4ij/pulls?state=open&sort=created&direction=desc&per_page=100" \
        | jq -r '.[] | "\(.number) \(.merge_commit_sha)"')
        pr_merge_shas=() # Initialize an empty array
        count=0
        while read -r pr; do
          pr_number=$(echo $pr | awk '{print $1}')
          pr_merge_sha=$(echo $pr | awk '{print $2}')
          pr_merge_shas+=("$pr_merge_sha") # Append merge SHA to the array
          echo "PULL_REQUEST_MERGE_SHA_${count}=$pr_merge_sha" >> $GITHUB_ENV
          count=$((count + 1))
        done <<< "$pr_info"
        echo "::set-output name=sha_count::$count"

  example_matrix:
    needs: fetch_all_pull_request_shas
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sha_index: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] # Assume a maximum of 10 SHAs for demonstration
    steps:
      - name: Checkout pull request merge commits
        if: ${{ matrix.sha_index < needs.fetch_all_pull_request_shas.outputs.sha_count }}
        uses: actions/checkout@v3
        with:
          repository: redhat-developer/lsp4ij
          ref: ${{ env['PULL_REQUEST_MERGE_SHA_' + matrix.sha_index] }}

      - name: Process merge commit
        if: ${{ matrix.sha_index < needs.fetch_all_pull_request_shas.outputs.sha_count }}
        run: |
          sha=${{ env['PULL_REQUEST_MERGE_SHA_' + matrix.sha_index] }}
          echo "Processing merge commit SHA: $sha"
          # Add your processing logic here
