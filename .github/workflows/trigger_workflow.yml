name: Fetch All Open Pull Request SHAs
on:
  push:
  workflow_dispatch:
jobs:
  fetch_all_pull_request_shas:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - name: Fetch all opened pull request numbers and merge commit SHAs
        id: fetch_pull_requests
        run: |
          pr_info=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/redhat-developer/lsp4ij/pulls?state=open&sort=created&direction=desc&per_page=100" \
          | jq -r '.[] | "\(.number) \(.merge_commit_sha)"')
          pr_merge_shas=()
          while read -r pr; do
            pr_number=$(echo $pr | awk '{print $1}')
            pr_merge_sha=$(echo $pr | awk '{print $2}')
            echo "PULL_REQUEST_NUMBER=$pr_number" >> $GITHUB_ENV
            echo "PULL_REQUEST_MERGE_SHA=$pr_merge_sha" >> $GITHUB_ENV
            pr_merge_shas+=("$pr_merge_sha")
            echo "Pull Request Number: $pr_number"
            echo "Pull Request Merge SHA: $pr_merge_sha"
          done <<< "$pr_info"
          echo "::set-output name=pr_merge_shas::$(printf '%s\n' "${pr_merge_shas[@]}")"

      - name: Set matrix output
        id: set-matrix
        run: |
          echo "matrix=$(jq -n --argjson shas '${{ needs.fetch_all_pull_request_shas.outputs.pr_merge_shas }}' '{"include": $shas | map({pr_merge_shas: .})}')" >> $GITHUB_ENV

  example_matrix:
    runs-on: ${{ matrix.os }}
    needs: fetch_all_pull_request_shas
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - name: Checkout pull request merge commits
        uses: actions/checkout@v3
        with:
          repository: redhat-developer/lsp4ij
          ref: ${{ matrix.pr_merge_shas }}
