name: CI

on:
  push:
    

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Fetch all open PRs
      id: fetch-prs
      run: |
        PR_SHAS=()
        for pr_number in $(curl -s "https://api.github.com/repos/redhat-developer/lsp4ij/pulls?state=open" | jq -r '.[].number'); do
          pr_sha=$(curl -s "https://api.github.com/repos/redhat-developer/lsp4ij/pulls/$pr_number" | jq -r '.merge_commit_sha')
          PR_SHAS+=("$pr_sha")
        done
        # Export the PR_SHAS array as a space-separated string
        echo "PR_SHAS=${PR_SHAS[@]}" >> $GITHUB_ENV

    - name: Set up matrix
      id: set-matrix
      run: |
        # Read the PR_SHAS environment variable and convert it to a JSON array
        PR_SHAS_JSON=$(jq -n --arg shas "${PR_SHAS}" '$shas | split(" ") | map({ "merge-commit": . })')
        echo "matrix=$PR_SHAS_JSON" >> $GITHUB_ENV
        echo "::set-output name=matrix::$PR_SHAS_JSON"

  checkout:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix: ${{ fromJson(needs.build.outputs.matrix) }}

    steps:
    - name: Checkout pull request merge commits
      uses: actions/checkout@v3
      with:
        repository: redhat-developer/lsp4ij
        ref: ${{ matrix.merge-commit }}
