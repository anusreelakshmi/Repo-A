
name: Fetch All Open Pull Request SHAs
on:
  push:
  workflow_dispatch:
jobs:
  populate_matrix:
    name: Populate Merge Commit Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - name: Fetch all opened pull request merge commit SHAs into an array
        id: fetch_all_pull_requests
        run: |
          # Fetch all open pull request merge commit SHAs
          pr_info=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/redhat-developer/lsp4ij/pulls?state=open&sort=created&direction=desc&per_page=100" \
            | jq -r '.[].merge_commit_sha')

          # Initialize an empty array in bash
          declare -a merge_shas=()

          # Iterate through each merge commit SHA and add to the array
          while read -r merge_sha; do
            merge_shas+=("$merge_sha")
          done <<< "$pr_info"

          # Print the array elements for verification
          echo "All Merge Commit SHAs:"
          printf '%s\n' "${merge_shas[@]}"

          # Set the output as JSON array
          echo "::set-output name=matrix::{\"merge-commit\":[\"${merge_shas[@]}\"]}"
      
      - name: Print Merge Commit SHAs
        run: |
          echo "Merge Commit SHAs:"
          echo "${{ toJson(needs.populate_matrix.outputs.matrix['merge-commit']) }}"

      - name: Check Matrix
        run: |
          if [[ -n "${{ toJson(needs.populate_matrix.outputs.matrix['merge-commit']) }}" ]]; then
            echo "Matrix is not empty"
          else
            echo "Matrix is empty or null"
          fi

          
      - name: Use matrix in subsequent steps
        run: |
          echo "Matrix: ${{ toJson(needs.populate_matrix.outputs.matrix) }}"
