name: Fetch All Open Pull Request SHAs
on:
  push:
  workflow_dispatch:
jobs:
  fetch_all_pull_request_shas:
    runs-on: ubuntu-latest
    outputs:
      merge_shas: ${{ steps.fetch_all_pull_requests.outputs.merge_shas }}
    steps:
    - name: Fetch all opened pull request numbers and merge commit SHAs
      id: fetch_all_pull_requests
      run: |
        pr_info=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        "https://api.github.com/repos/redhat-developer/lsp4ij/pulls?state=open&sort=created&direction=desc&per_page=100" \
        | jq -r '.[] | "\(.number) \(.merge_commit_sha)"')
        pr_merge_shas=() # Initialize an empty array
        while read -r pr; do
          pr_number=$(echo $pr | awk '{print $1}')
          pr_merge_sha=$(echo $pr | awk '{print $2}')
          echo "PULL_REQUEST_NUMBER=$pr_number" >> $GITHUB_ENV
          echo "PULL_REQUEST_MERGE_SHA=$pr_merge_sha" >> $GITHUB_ENV
          pr_merge_shas+=("$pr_merge_sha") # Append merge SHA to the array
          echo "Pull Request Number: $pr_number"
          echo "Pull Request Merge SHA: $pr_merge_sha"
        done <<< "$pr_info"
        # Convert the array to a comma-separated string
        merge_shas_csv=$(IFS=,; echo "${pr_merge_shas[*]}")
        echo "merge-commit: $merge_shas_csv"
        # Set the output variable
        echo "::set-output name=merge_shas::$merge_shas_csv"

  example_matrix:
    runs-on: ${{ matrix.os }}
    needs: fetch_all_pull_request_shas
    strategy:
      matrix:
        runtime: [ linux, mac, windows ]
        include:
          - runtime: linux
            os: ubuntu-latest
          - runtime: mac
            os: macOS-latest
          - runtime: windows
            os: windows-latest
    steps:
      - name: Set merge commits from output
        id: set_merge_commits
        run: echo "MERGE_COMMITS=${{ needs.fetch_all_pull_request_shas.outputs.merge_shas }}" >> $GITHUB_ENV

      - name: Checkout pull request merge commits
        uses: actions/checkout@v3
        with:
          repository: redhat-developer/lsp4ij
          # Process each SHA separately
          ref: ${{ matrix.merge-commit }}

      - name: Process each merge commit
        run: |
          IFS=',' read -r -a merge_shas <<< "${{ env.MERGE_COMMITS }}"
          for sha in "${merge_shas[@]}"; do
            echo "Processing merge commit SHA: $sha"
            # Add your processing logic here
          done
